# Generated by Django 4.1.6 on 2023-03-01 04:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=150)),
                ("author", models.CharField(default="John Doe", max_length=100)),
                ("isbn", models.CharField(max_length=13)),
                ("pages", models.IntegerField()),
                ("price", models.IntegerField()),
                ("quantity", models.IntegerField()),
                ("description", models.TextField()),
                ("status", models.BooleanField()),
                ("date_created", models.DateField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-date_created"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30)),
            ],
            options={
                "verbose_name_plural": "Countries",
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30)),
                ("unit_spawn", models.BooleanField()),
                ("is_sea", models.BooleanField()),
                ("is_coast", models.BooleanField()),
            ],
            options={
                "verbose_name_plural": "Locations",
            },
        ),
        migrations.CreateModel(
            name="Map",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30)),
                ("max_countries", models.IntegerField()),
            ],
            options={
                "verbose_name_plural": "Maps",
            },
        ),
        migrations.CreateModel(
            name="Turn",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year", models.IntegerField()),
                ("is_autumn", models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name="Unit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("can_float", models.BooleanField()),
                (
                    "location",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="room.location"
                    ),
                ),
                (
                    "owner",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="room.country"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "instruction",
                    models.CharField(
                        choices=[
                            ("HLD", "Hold"),
                            ("MVE", "Move"),
                            ("SPT", "Support"),
                            ("CVY", "Convoy"),
                        ],
                        default="HLD",
                        max_length=3,
                    ),
                ),
                (
                    "current_location",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="current_location",
                        to="room.location",
                    ),
                ),
                (
                    "reference_unit",
                    models.OneToOneField(
                        blank=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="reference_unit",
                        to="room.unit",
                    ),
                ),
                (
                    "reference_unit_current_location",
                    models.OneToOneField(
                        blank=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="reference_unit_current_location",
                        to="room.location",
                    ),
                ),
                (
                    "reference_unit_new_location",
                    models.OneToOneField(
                        blank=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="reference_unit_new_location",
                        to="room.location",
                    ),
                ),
                (
                    "target_unit",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="target_unit",
                        to="room.unit",
                    ),
                ),
                (
                    "turn",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING, to="room.turn"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Orders",
            },
        ),
        migrations.CreateModel(
            name="Next_to",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "location",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="location",
                        to="room.location",
                    ),
                ),
                (
                    "next_to",
                    models.ManyToManyField(related_name="next_to", to="room.location"),
                ),
            ],
            options={
                "verbose_name_plural": "Next_to",
            },
        ),
        migrations.CreateModel(
            name="Grocery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("product_tag", models.CharField(max_length=10)),
                ("name", models.CharField(max_length=100)),
                ("price", models.IntegerField()),
                ("quantity", models.IntegerField()),
                ("imageurl", models.URLField()),
                ("status", models.BooleanField()),
                ("date_created", models.DateField(auto_now_add=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="grocery",
                        to="room.category",
                    ),
                ),
            ],
            options={
                "ordering": ["-date_created"],
            },
        ),
        migrations.CreateModel(
            name="Outcome",
            fields=[],
            options={
                "verbose_name_plural": "Outcomes",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("room.order",),
        ),
    ]
